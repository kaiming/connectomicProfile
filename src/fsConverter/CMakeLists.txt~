set(AllLibs VTK ITK MYFSL Alglib GSL Arma KML Metis)

foreach ( pkg ${AllLibs} )
find_package(${pkg} REQUIRED)
if(${pkg}_FOUND)
  include( ${USE_${pkg}_FILE} )
endif(${pkg}_FOUND)
endforeach(pkg)


cmake_minimum_required(VERSION 2.6) #cmake version requirement; 


#set(CMAKE_CXX_FLAGS "-fopenmp -lgomp")


#comment out the following section when release; 
SET(CMAKE_SKIP_BUILD_RPATH  FALSE) # use, i.e. don't skip the full RPATH for the build tree
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE) # when building, don't use the install RPATH already,but later on when installing
SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)# add the automatically determined parts of the RPATH, which point to directories outside the build tree to the install RPATH
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir) # the RPATH to be used when installing, but only if it's not a system directory
IF("${isSystemDir}" STREQUAL "-1")
   SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
ENDIF("${isSystemDir}" STREQUAL "-1")
 
 

set(projectName "fsutils")

PROJECT(${projectName})
 
LINK_LIBRARIES(${KML_LIBRARIES} ${Graclus_LIBRARIES} ${Metis_LIBRARIES} ${Arma_LIBRARIES} ${GSL_LIBRARIES} 
		      ${MYFSL_LIBRARIES} ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${Alglib_LIBRARIES} ${MATLAB_LIBRARIES} )
		      
ADD_EXECUTABLE(fsRas2VoxAddOri fsRas2VoxAddOri.cpp)
#target_link_libraries(fsRas2VoxAddOri ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fsRas2Vox fsRas2Vox.cpp)
#target_link_libraries(fsRas2Vox ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fs2vtk fs2vtk.cpp)
#target_link_libraries(fs2vtk ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fsVox2Ras fsVox2Ras.cpp)
#target_link_libraries(fsVox2Ras ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fsVox2RasRmOri fsVox2RasRmOri.cpp)
#target_link_libraries(fsVox2RasRmOri ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fsCombineLeftRightSurfs fsCombineLeftRightSurfs.cpp)
#target_link_libraries(fsCombineLeftRightSurfs ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

add_executable(fsGeneraterCentralSurf generateCS.cpp)
#target_link_libraries(fsGeneraterCentralSurf ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})

ADD_EXECUTABLE(fsCombineLeftRightCentralSurfs fsCombineLeftRightCentralSurfs.cpp)
#target_link_libraries(fsCombineLeftRightCentralSurfs ${VTK_LIBRARIES} ${KML_LIBRARIES} ${GSL_LIBRARIES}  ${MYFSL_LIBRARIES})
 

 
install(TARGETS fsGeneraterCentralSurf fs2vtk fsRas2VoxAddOri fsRas2Vox fsVox2Ras fsVox2RasRmOri fsCombineLeftRightSurfs fsCombineLeftRightCentralSurfs DESTINATION  bin)
#install(DIRECTORY ./ DESTINATION /home/kaiming/programs/kml/include/ FILES_MATCHING PATTERN "*.h")
#install(DIRECTORY ./ DESTINATION /home/kaiming/programs/kml/lib/ FILES_MATCHING PATTERN "*.a")
 


