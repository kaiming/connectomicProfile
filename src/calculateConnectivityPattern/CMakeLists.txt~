set(projectName calConnectivityPattern)
set(AllLibs VTK MYFSL Alglib GSL Arma KML Metis)

 
cmake_minimum_required(VERSION 2.6)

foreach ( pkg ${AllLibs} )
find_package(${pkg} REQUIRED)
if(${pkg}_FOUND)
  include( ${USE_${pkg}_FILE} )
endif(${pkg}_FOUND)
endforeach(pkg)


# use, i.e. don't skip the full RPATH for the build tree
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)

# when building, don't use the install RPATH already
# (but later on when installing)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE) 

SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")

# add the automatically determined parts of the RPATH
# which point to directories outside the build tree to the install RPATH
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


# the RPATH to be used when installing, but only if it's not a system directory
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir)
IF("${isSystemDir}" STREQUAL "-1")
   SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
ENDIF("${isSystemDir}" STREQUAL "-1")




PROJECT(${projectName})

IF(libName)
ADD_LIBRARY(${libName} SHARED ${libName}.cpp)
ENDIF(libName)

ADD_EXECUTABLE(${projectName} ${projectName}.cpp)

TARGET_LINK_LIBRARIES(${projectName} ${libName} ${KML_LIBRARIES}
${Graclus_LIBRARIES} ${Metis_LIBRARIES} ${Arma_LIBRARIES} ${GSL_LIBRARIES}
${MYFSL_LIBRARIES} ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${Alglib_LIBRARIES} 
)
 
INSTALL(TARGETS ${projectName} DESTINATION bin)


IF(libName)
INSTALL(TARGETS ${libName} DESTINATION ${KML_DIR}/lib)
INSTALL(DIRECTORY ./ DESTINATION ${KML_DIR}/include/ FILES_MATCHING PATTERN *.h)
add_custom_target(updateKML COMMAND updateKML ${libName})
ENDIF(libName)

