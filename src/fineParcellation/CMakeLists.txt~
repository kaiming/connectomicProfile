
cmake_minimum_required(VERSION 2.6)
 
set(AllLibs VTK MYFSL Alglib GSL Arma Metis KML  Metis)

foreach ( pkg ${AllLibs} )
find_package(${pkg} REQUIRED)
if(${pkg}_FOUND)
  include( ${USE_${pkg}_FILE} )
endif(${pkg}_FOUND)
endforeach(pkg)





# use, i.e. don't skip the full RPATH for the build tree
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)

# when building, don't use the install RPATH already
# (but later on when installing)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE) 

SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")

# add the automatically determined parts of the RPATH
# which point to directories outside the build tree to the install RPATH
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


# the RPATH to be used when installing, but only if it's not a system directory
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir)
IF("${isSystemDir}" STREQUAL "-1")
   SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
ENDIF("${isSystemDir}" STREQUAL "-1")


#remove the following line for non_debug mode; 
INCLUDE_DIRECTORIES("./")
# SET(CMAKE_CXX_FLAGS "-std=c++0x")
# SET(CMAKE_CXX_FLAGS "-std=c++0x")   

set(projectName "fineParcellationMetis")

PROJECT(${projectName})

ADD_LIBRARY(kmlPartitions SHARED kmlPartitions.cpp)
ADD_EXECUTABLE(${projectName} fineParcellation.cpp fineParcellator.cpp)
TARGET_LINK_LIBRARIES(${projectName} kmlPartitions ${KML_LIBRARIES} ${Graclus_LIBRARIES} ${Metis_LIBRARIES} ${Arma_LIBRARIES} ${GSL_LIBRARIES} ${MYFSL_LIBRARIES} ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${Alglib_LIBRARIES})
 

install(TARGETS ${projectName} DESTINATION  bin)
# INSTALL(TARGETS kmlPartitions DESTINATION lib)

#install(DIRECTORY ./ DESTINATION /home/kaiming/programs/kml/include/ FILES_MATCHING PATTERN "*.h")
#install(DIRECTORY ./ DESTINATION /home/kaiming/programs/kml/lib/ FILES_MATCHING PATTERN "*.a")
 


